/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package danielreyes_lab7p2;

import java.awt.Color;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.Random;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTree;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.MutableTreeNode;


    

public class Principal extends javax.swing.JFrame {
    Random aleatorio = new Random();
    
    public Principal() {
        initComponents();
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popuparchivo = new javax.swing.JPopupMenu();
        menuitemeliminararch = new javax.swing.JMenuItem();
        menuitemagregardestacados = new javax.swing.JMenuItem();
        popupmenu = new javax.swing.JPopupMenu();
        menuitemcreararchivo = new javax.swing.JMenuItem();
        menuitemcrearcarptea = new javax.swing.JMenuItem();
        menuitemfav = new javax.swing.JMenuItem();
        menuitemeiminar = new javax.swing.JMenuItem();
        menuitemdescargar = new javax.swing.JMenuItem();
        popupmenuraiz = new javax.swing.JPopupMenu();
        menuitemcreararchivo1 = new javax.swing.JMenuItem();
        menuitemcrearcarptea1 = new javax.swing.JMenuItem();
        jFrame1 = new javax.swing.JFrame();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        textfieldnombre = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        textfieldtamano = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        combobox = new javax.swing.JComboBox<>();
        jFrame2 = new javax.swing.JFrame();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        textfieldnombre1 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jlist = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtree = new javax.swing.JTree();
        pgabajo = new javax.swing.JProgressBar();
        jButton4 = new javax.swing.JButton();

        menuitemeliminararch.setText("Eliminar Archivo");
        menuitemeliminararch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuitemeliminararchActionPerformed(evt);
            }
        });
        popuparchivo.add(menuitemeliminararch);

        menuitemagregardestacados.setText("Agregar Destacados");
        menuitemagregardestacados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuitemagregardestacadosActionPerformed(evt);
            }
        });
        popuparchivo.add(menuitemagregardestacados);

        menuitemcreararchivo.setText("Crear Archivo");
        menuitemcreararchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuitemcreararchivoActionPerformed(evt);
            }
        });
        popupmenu.add(menuitemcreararchivo);

        menuitemcrearcarptea.setText("Crear Carpeta");
        menuitemcrearcarptea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuitemcrearcarpteaActionPerformed(evt);
            }
        });
        popupmenu.add(menuitemcrearcarptea);

        menuitemfav.setText("Agregar a Destacados");
        menuitemfav.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuitemfavActionPerformed(evt);
            }
        });
        popupmenu.add(menuitemfav);

        menuitemeiminar.setText("Eliminar Carpeta");
        menuitemeiminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuitemeiminarActionPerformed(evt);
            }
        });
        popupmenu.add(menuitemeiminar);

        menuitemdescargar.setText("Descargar Carpeta");
        menuitemdescargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuitemdescargarActionPerformed(evt);
            }
        });
        popupmenu.add(menuitemdescargar);

        menuitemcreararchivo1.setText("Crear Archivo");
        menuitemcreararchivo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuitemcreararchivo1ActionPerformed(evt);
            }
        });
        popupmenuraiz.add(menuitemcreararchivo1);

        menuitemcrearcarptea1.setText("Crear Carpeta");
        menuitemcrearcarptea1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuitemcrearcarptea1ActionPerformed(evt);
            }
        });
        popupmenuraiz.add(menuitemcrearcarptea1);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setText("Crear Archivo");

        jLabel2.setText("Nombre");

        jLabel3.setText("Tama√±o");

        jButton1.setBackground(new java.awt.Color(204, 204, 204));
        jButton1.setText("Agregar");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jLabel4.setText("Extension");

        combobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { ".pdf", ".mp4", ".docx", ".txt" }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(290, 290, 290)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(264, 264, 264)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldnombre, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldtamano, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(combobox, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(300, 300, 300)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(308, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textfieldnombre)
                .addGap(34, 34, 34)
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textfieldtamano)
                .addGap(33, 33, 33)
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(combobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(64, 64, 64)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(85, 85, 85))
        );

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel5.setText("Crear Carpeta");

        jLabel6.setText("Nombre");

        jButton2.setBackground(new java.awt.Color(204, 204, 204));
        jButton2.setText("Agregar");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(290, 290, 290)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(263, 263, 263)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textfieldnombre1, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(291, 291, 291)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(309, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(114, 114, 114)
                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textfieldnombre1)
                .addGap(62, 62, 62)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(170, 170, 170))
        );

        javax.swing.GroupLayout jFrame2Layout = new javax.swing.GroupLayout(jFrame2.getContentPane());
        jFrame2.getContentPane().setLayout(jFrame2Layout);
        jFrame2Layout.setHorizontalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jFrame2Layout.setVerticalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jlist.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Mi Unidad", "Destacados", "Papelera" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jlist.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlistMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jlist);

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("root");
        jtree.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jtree.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtreeMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jtree);

        pgabajo.setToolTipText("");

        jButton4.setBackground(new java.awt.Color(0, 0, 0));
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Leer Binario");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 167, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pgabajo, javax.swing.GroupLayout.DEFAULT_SIZE, 266, Short.MAX_VALUE)
                    .addComponent(jScrollPane2)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(71, 71, 71)))
                .addGap(71, 71, 71))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(86, 86, 86)
                .addComponent(pgabajo, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton4)))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtreeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtreeMouseClicked
        jtree.setSelectionRow(jtree.getClosestRowForLocation(evt.getX(), evt.getY()));
        nodoseleccion = (DefaultMutableTreeNode)jtree.getSelectionPath().getLastPathComponent();
        DefaultTreeModel modelo = (DefaultTreeModel) jtree.getModel();
        DefaultMutableTreeNode raiz =  (DefaultMutableTreeNode) modelo.getRoot();
        for (Archivo a : listaarch) {
            String temp = a.getNombre()+a.getExtension();
                if(temp.equals(nodoseleccion.toString())){
                    pgabajo.setStringPainted(true);
                    pgabajo.setString(a.getLink());
                    pgabajo.setForeground(Color.black);
                    
               }
        }
        for (Carpepta c : listacarp) {
            if(c.getNombre().equals(nodoseleccion.toString())){
                pgabajo.setStringPainted(true);
                    pgabajo.setString(c.getLink());
                    pgabajo.setForeground(Color.black);
            }
        }
        if(evt.getButton()==3){
            if(nodoseleccion== raiz && nodoseleccion.getUserObject().equals("Mi Unidad")){
                popupmenuraiz.show(jtree, evt.getX(), evt.getY());
                pgabajo.setString("Mi Unidad");
            }else if (nodoseleccion.getUserObject()instanceof Carpepta){
                popupmenu.show(jtree, evt.getX(), evt.getY());
                
                
            }else if (nodoseleccion.getUserObject()instanceof Archivo){
                popuparchivo.show(jtree, evt.getX(), evt.getY());
            }
                    
        }
        
    }//GEN-LAST:event_jtreeMouseClicked

    private void jlistMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlistMouseClicked
        listseleccionado = "";
        listseleccionado = jlist.getSelectedValue();
        
        if(listseleccionado.equals("Mi Unidad")){
            if(contador !=4){
                DefaultTreeModel modelo = (DefaultTreeModel) jtree.getModel();
                DefaultMutableTreeNode raiz = (DefaultMutableTreeNode) modelo.getRoot();
                raiz.setUserObject(listseleccionado);
                modelo.reload();
                arbol1 = modelo;
                contador = 4;
                
            }else{
                jtree.setModel(arbol1);
                DefaultTreeModel modelo = (DefaultTreeModel) jtree.getModel();
                DefaultMutableTreeNode raiz = (DefaultMutableTreeNode) modelo.getRoot();
                raiz.setUserObject(listseleccionado);
                modelo.reload();
                //guardarbinario
                try {
                    FileOutputStream fw = null;
                    ObjectOutputStream bw = null;

                    File archivo = new File("./binarioguardado");
                    try {
                        fw = new FileOutputStream(archivo);
                        bw = new ObjectOutputStream(fw);
                        Binario b = new Binario(jtree);
                        bw.writeObject(b);
                        bw.flush();

                    } catch (Exception e) {
                    }

                    try {
                        bw.close();
                        fw.close();
                    } catch (IOException ex) {
                    }
                } catch (NullPointerException e) {
                }
                
            }
            
            
        }else if(listseleccionado.equals("Destacados")){
            if(contador22!=4){
                DefaultTreeModel modelo = new DefaultTreeModel(new DefaultMutableTreeNode("Destacados"));
                jtree.setModel(modelo);
                DefaultMutableTreeNode raiz = (DefaultMutableTreeNode) modelo.getRoot();
                modelo.reload();
                arbol22 = modelo;
                contador22 = 4;
            }else{
                jtree.setModel(arbol22);
                DefaultTreeModel modelo = (DefaultTreeModel) jtree.getModel();
                DefaultMutableTreeNode raiz = (DefaultMutableTreeNode) modelo.getRoot();
                raiz.setUserObject(listseleccionado);
                modelo.reload();
            }
            
            
            
        }else if(listseleccionado.equals("Papelera")){
            if(contador66!=4){
                DefaultTreeModel modelo = new DefaultTreeModel(new DefaultMutableTreeNode("Papelera"));
                jtree.setModel(modelo);
                DefaultMutableTreeNode raiz = (DefaultMutableTreeNode) modelo.getRoot();
                modelo.reload();
                arbol66 = modelo;
                contador66 = 4;
            }else{
                jtree.setModel(arbol66);
                DefaultTreeModel modelo = (DefaultTreeModel) jtree.getModel();
                DefaultMutableTreeNode raiz = (DefaultMutableTreeNode) modelo.getRoot();
                raiz.setUserObject(listseleccionado);
                modelo.reload();
            }
        }
        
        
    }//GEN-LAST:event_jlistMouseClicked

    private void menuitemcreararchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuitemcreararchivoActionPerformed
        this.setVisible(false);
        jFrame1.pack();
        jFrame1.setLocationRelativeTo(this);
        jFrame1.setVisible(true);
        
    }//GEN-LAST:event_menuitemcreararchivoActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        Archivo a;
        String link = "dive.google.com/";
        link = ""+link + generadorlink();
        try {
            a = new Archivo(textfieldnombre.getText(), link, combobox.getSelectedItem().toString(), Integer.parseInt(textfieldtamano.getText()));
            listaarch.add(a);
            DefaultTreeModel modelo = (DefaultTreeModel) jtree.getModel();
            DefaultMutableTreeNode raiz = (DefaultMutableTreeNode) modelo.getRoot();
            DefaultMutableTreeNode nodoarchivo = new DefaultMutableTreeNode(a);
            nodoseleccion.add(nodoarchivo);
            modelo.reload();
            
            
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(jFrame1, "El tama√±o no es una cadena");
        }
        textfieldnombre.setText("");
        textfieldtamano.setText("");
        combobox.setSelectedIndex(0);
        jFrame1.setVisible(false);
        this.setVisible(true);
        
    }//GEN-LAST:event_jButton1MouseClicked

    private void menuitemcrearcarpteaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuitemcrearcarpteaActionPerformed
        this.setVisible(false);
        jFrame2.pack();
        jFrame2.setLocationRelativeTo(this);
        jFrame2.setVisible(true);
        
    }//GEN-LAST:event_menuitemcrearcarpteaActionPerformed

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        Carpepta c;
        String link = "dive.google.com/";
        link = ""+ link + generadorlinkpequeno()+"/"+generadorlink();
        c = new Carpepta(textfieldnombre1.getText(), link);
        listacarp.add(c);
        DefaultTreeModel modelo = (DefaultTreeModel) jtree.getModel();
        DefaultMutableTreeNode raiz = (DefaultMutableTreeNode) modelo.getRoot();
        DefaultMutableTreeNode nodoarchivo = new DefaultMutableTreeNode(c);
        nodoseleccion.add(nodoarchivo);
        modelo.reload();
        
        textfieldnombre1.setText("");
        jFrame2.setVisible(false);
        this.setVisible(true);
    }//GEN-LAST:event_jButton2MouseClicked

    private void menuitemcreararchivo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuitemcreararchivo1ActionPerformed
        this.setVisible(false);
        jFrame1.pack();
        jFrame1.setLocationRelativeTo(this);
        jFrame1.setVisible(true);
    }//GEN-LAST:event_menuitemcreararchivo1ActionPerformed

    private void menuitemcrearcarptea1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuitemcrearcarptea1ActionPerformed
        this.setVisible(false);
        jFrame2.pack();
        jFrame2.setLocationRelativeTo(this);
        jFrame2.setVisible(true);
    }//GEN-LAST:event_menuitemcrearcarptea1ActionPerformed

    private void menuitemeiminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuitemeiminarActionPerformed
        if (contador66 != 4) {
            try {
                nodoseleccion.removeAllChildren();
                DefaultTreeModel modelo = (DefaultTreeModel) jtree.getModel();
                DefaultMutableTreeNode raiz = (DefaultMutableTreeNode) modelo.getRoot();
                raiz.remove(nodoseleccion);
                modelo.reload();
            } catch (IllegalArgumentException e) {
                DefaultTreeModel modelo = (DefaultTreeModel) jtree.getModel();
                DefaultMutableTreeNode raiz = (DefaultMutableTreeNode) modelo.getRoot();
                nodoseleccion.removeAllChildren();
                modelo.removeNodeFromParent(nodoseleccion);
                modelo.reload();
            }
            
            DefaultTreeModel modelo = new DefaultTreeModel(new DefaultMutableTreeNode("Papelera"));
            jtree.setModel(modelo);
            DefaultMutableTreeNode raiz = (DefaultMutableTreeNode) modelo.getRoot();
            DefaultMutableTreeNode nodo = new DefaultMutableTreeNode(nodoseleccion);
            if (nodoseleccion.getChildCount() > 0) {
                for (int i = 0; i < nodoseleccion.getChildCount(); i++) {
                    DefaultMutableTreeNode nodomenor = new DefaultMutableTreeNode(nodoseleccion.getChildAt(i));

                    nodo.add(nodomenor);
                }
            }
            raiz.add(nodo);
            modelo.reload();
            arbol66 = modelo;
            contador66 = 4;
            
            
        } else {
             try {
                
                DefaultTreeModel modelo = (DefaultTreeModel) jtree.getModel();
                DefaultMutableTreeNode raiz = (DefaultMutableTreeNode) modelo.getRoot();
                raiz.remove(nodoseleccion);
                modelo.reload();
            } catch (IllegalArgumentException e) {
                DefaultTreeModel modelo = (DefaultTreeModel) jtree.getModel();
                DefaultMutableTreeNode raiz = (DefaultMutableTreeNode) modelo.getRoot();
                nodoseleccion.removeAllChildren();
                modelo.removeNodeFromParent(nodoseleccion);
                modelo.reload();
            }

            jtree.setModel(arbol66);
            DefaultTreeModel modelo = (DefaultTreeModel) jtree.getModel();
            DefaultMutableTreeNode raiz = (DefaultMutableTreeNode) modelo.getRoot();
            DefaultMutableTreeNode nodo = new DefaultMutableTreeNode(nodoseleccion);
            if (nodoseleccion.getChildCount() > 0) {
                for (int i = 0; i < nodoseleccion.getChildCount(); i++) {
                    DefaultMutableTreeNode nodomenor = new DefaultMutableTreeNode(nodoseleccion.getChildAt(i));

                    nodo.add(nodomenor);
                }
            }
            raiz.add(nodo);
            modelo.reload();
        }
        jlist.setSelectedIndex(2);
        
    }//GEN-LAST:event_menuitemeiminarActionPerformed

    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
        try {
            File archivo = null;
            FileInputStream fr = null;
            ObjectInputStream br = null;
            try {
                JFileChooser jfc = new JFileChooser();
                int seleccion = jfc.showSaveDialog(this);
                if (seleccion == JFileChooser.APPROVE_OPTION) {
                    archivo = jfc.getSelectedFile();
                    fr = new FileInputStream(archivo);
                    br = new ObjectInputStream(fr);

                    Binario b = (Binario) br.readObject();
                    jtree.setModel(arbol1);

                }
            } catch (Exception e) {
            }
            try {
                br.close();
                fr.close();
            } catch (IOException ex) {
            }
        } catch (NullPointerException e) {
        }
        
    }//GEN-LAST:event_jButton4MouseClicked

    private void menuitemeliminararchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuitemeliminararchActionPerformed
        if(contador66 != 4){
        try {
            DefaultTreeModel modelo = (DefaultTreeModel) jtree.getModel();
            modelo.removeNodeFromParent(nodoseleccion);
            modelo.reload();
        } catch (ArrayIndexOutOfBoundsException e) {
        }
        DefaultTreeModel modelo = new DefaultTreeModel(new DefaultMutableTreeNode("Papelera"));
            jtree.setModel(modelo);
            DefaultMutableTreeNode raiz = (DefaultMutableTreeNode) modelo.getRoot();
            DefaultMutableTreeNode nodo = new DefaultMutableTreeNode(nodoseleccion);
            raiz.add(nodo);
            modelo.reload();
            arbol66 = modelo;
            contador66 = 4;
        } else {
            try {
                DefaultTreeModel modelo = (DefaultTreeModel) jtree.getModel();
                modelo.removeNodeFromParent(nodoseleccion);
                modelo.reload();
            } catch (ArrayIndexOutOfBoundsException e) {
            }
            jtree.setModel(arbol66);
            DefaultTreeModel modelo = (DefaultTreeModel) jtree.getModel();
            DefaultMutableTreeNode raiz = (DefaultMutableTreeNode) modelo.getRoot();
            DefaultMutableTreeNode nodo = new DefaultMutableTreeNode(nodoseleccion);
            raiz.add(nodo);
            modelo.reload();
        }
        jlist.setSelectedIndex(2);
        
    }//GEN-LAST:event_menuitemeliminararchActionPerformed

    private void menuitemagregardestacadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuitemagregardestacadosActionPerformed
        if (contador22 != 4) {
            try {
                DefaultTreeModel modelo = (DefaultTreeModel) jtree.getModel();
                modelo.removeNodeFromParent(nodoseleccion);
                modelo.reload();
            } catch (ArrayIndexOutOfBoundsException e) {
            }
            DefaultTreeModel modelo = new DefaultTreeModel(new DefaultMutableTreeNode("Destacados"));
            jtree.setModel(modelo);
            DefaultMutableTreeNode raiz = (DefaultMutableTreeNode) modelo.getRoot();
            DefaultMutableTreeNode nodo = new DefaultMutableTreeNode(nodoseleccion);
            raiz.add(nodo);
            modelo.reload();
            arbol22 = modelo;
            contador22 = 4;
        } else {
            try {
                DefaultTreeModel modelo = (DefaultTreeModel) jtree.getModel();
                modelo.removeNodeFromParent(nodoseleccion);
                modelo.reload();
            } catch (ArrayIndexOutOfBoundsException e) {
            }
            jtree.setModel(arbol22);
            DefaultTreeModel modelo = (DefaultTreeModel) jtree.getModel();
            DefaultMutableTreeNode raiz = (DefaultMutableTreeNode) modelo.getRoot();
            DefaultMutableTreeNode nodo = new DefaultMutableTreeNode(nodoseleccion);
            raiz.add(nodo);
            modelo.reload();
        }
        jlist.setSelectedIndex(1);
        
        
    }//GEN-LAST:event_menuitemagregardestacadosActionPerformed

    private void menuitemfavActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuitemfavActionPerformed
        if (contador22 != 4) {
            try {
                nodoseleccion.removeAllChildren();
                DefaultTreeModel modelo = (DefaultTreeModel) jtree.getModel();
                DefaultMutableTreeNode raiz = (DefaultMutableTreeNode) modelo.getRoot();
                raiz.remove(nodoseleccion);
                modelo.reload();
            } catch (IllegalArgumentException e) {
                DefaultTreeModel modelo = (DefaultTreeModel) jtree.getModel();
                DefaultMutableTreeNode raiz = (DefaultMutableTreeNode) modelo.getRoot();
                nodoseleccion.removeAllChildren();
                modelo.removeNodeFromParent(nodoseleccion);
                modelo.reload();
            }
            
            DefaultTreeModel modelo = new DefaultTreeModel(new DefaultMutableTreeNode("Destacados"));
            jtree.setModel(modelo);
            DefaultMutableTreeNode raiz = (DefaultMutableTreeNode) modelo.getRoot();
            DefaultMutableTreeNode nodo = new DefaultMutableTreeNode(nodoseleccion);
            if (nodoseleccion.getChildCount() > 0) {
                for (int i = 0; i < nodoseleccion.getChildCount(); i++) {
                    DefaultMutableTreeNode nodomenor = new DefaultMutableTreeNode(nodoseleccion.getChildAt(i));

                    nodo.add(nodomenor);
                }
            }
            raiz.add(nodo);
            modelo.reload();
            arbol22 = modelo;
            contador22 = 4;
            
            
        } else {
             try {
                
                DefaultTreeModel modelo = (DefaultTreeModel) jtree.getModel();
                DefaultMutableTreeNode raiz = (DefaultMutableTreeNode) modelo.getRoot();
                raiz.remove(nodoseleccion);
                modelo.reload();
            } catch (IllegalArgumentException e) {
                DefaultTreeModel modelo = (DefaultTreeModel) jtree.getModel();
                DefaultMutableTreeNode raiz = (DefaultMutableTreeNode) modelo.getRoot();
                nodoseleccion.removeAllChildren();
                modelo.removeNodeFromParent(nodoseleccion);
                modelo.reload();
            }

            jtree.setModel(arbol22);
            DefaultTreeModel modelo = (DefaultTreeModel) jtree.getModel();
            DefaultMutableTreeNode raiz = (DefaultMutableTreeNode) modelo.getRoot();
            DefaultMutableTreeNode nodo = new DefaultMutableTreeNode(nodoseleccion);
            if (nodoseleccion.getChildCount() > 0) {
                for (int i = 0; i < nodoseleccion.getChildCount(); i++) {
                    DefaultMutableTreeNode nodomenor = new DefaultMutableTreeNode(nodoseleccion.getChildAt(i));

                    nodo.add(nodomenor);
                }
            }
            raiz.add(nodo);
            modelo.reload();
        }
        jlist.setSelectedIndex(1);
    }//GEN-LAST:event_menuitemfavActionPerformed

    private void menuitemdescargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuitemdescargarActionPerformed
        if(nodoseleccion.getChildCount()== 0){
            JOptionPane.showMessageDialog(jtree, "No hay nada en la carpeta");
        }else{
            int temp = nodoseleccion.getChildCount();
            Barra b = new Barra(pgabajo, temp*50);
            b.start();
        }
        
    }//GEN-LAST:event_menuitemdescargarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> combobox;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JFrame jFrame2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<String> jlist;
    private javax.swing.JTree jtree;
    private javax.swing.JMenuItem menuitemagregardestacados;
    private javax.swing.JMenuItem menuitemcreararchivo;
    private javax.swing.JMenuItem menuitemcreararchivo1;
    private javax.swing.JMenuItem menuitemcrearcarptea;
    private javax.swing.JMenuItem menuitemcrearcarptea1;
    private javax.swing.JMenuItem menuitemdescargar;
    private javax.swing.JMenuItem menuitemeiminar;
    private javax.swing.JMenuItem menuitemeliminararch;
    private javax.swing.JMenuItem menuitemfav;
    private javax.swing.JProgressBar pgabajo;
    private javax.swing.JPopupMenu popuparchivo;
    private javax.swing.JPopupMenu popupmenu;
    private javax.swing.JPopupMenu popupmenuraiz;
    private javax.swing.JTextField textfieldnombre;
    private javax.swing.JTextField textfieldnombre1;
    private javax.swing.JTextField textfieldtamano;
    // End of variables declaration//GEN-END:variables
    public String generadorlink(){
        String temp="";
        int x;
        int b;
        boolean a = true;
        while(a== true){
            x = 1 + aleatorio.nextInt(122);
            for (int j = 65; j <= 90; j++) {
                if(x == j){
                    temp += (char)j;
                    break;
                }
            }
            for (int j = 48; j <= 57; j++) {
                if(x == j){
                    temp += (char)j;
                    break;
                }
            }
            for (int j = 97; j <= 122; j++) {
                if(x == j){
                    temp += (char)j;
                    break;
                }
            }
            if(temp.length()== 10){
                a = false;
            }
        }
        
        return temp;   
    }
    public String generadorlinkpequeno(){
        String temp="";
        int x;
        int b;
        boolean a = true;
        while(a== true){
            x = 1 + aleatorio.nextInt(122);
            for (int j = 65; j <= 90; j++) {
                if(x == j){
                    temp += (char)j;
                    break;
                }
            }
            for (int j = 48; j <= 57; j++) {
                if(x == j){
                    temp += (char)j;
                    break;
                }
            }
            for (int j = 97; j <= 122; j++) {
                if(x == j){
                    temp += (char)j;
                    break;
                }
            }
            if(temp.length()== 5){
                a = false;
            }
        }
        
        return temp;   
    }
    
    private ArrayList<Archivo> listaarch = new ArrayList();
    private ArrayList<Carpepta> listacarp = new ArrayList();
    private String listseleccionado;
    private DefaultMutableTreeNode nodoseleccion;
    private DefaultTreeModel arbol1;
    private DefaultTreeModel arbol22;
    private DefaultTreeModel arbol66;
    private int contador;
    private int contador22;
    private int contador66;
}
